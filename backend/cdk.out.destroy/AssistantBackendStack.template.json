{
 "Description": "AWS Agentic documents assistant (uksb-1tupboc44)",
 "Resources": {
  "VpcVPC8B8C4E4B": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/Resource"
   }
  },
  "VpcVPCpublicSubnet1SubnetA91B7DBE": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet1/Subnet"
   }
  },
  "VpcVPCpublicSubnet1RouteTableA07850BA": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/publicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet1/RouteTable"
   }
  },
  "VpcVPCpublicSubnet1RouteTableAssociation48205878": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcVPCpublicSubnet1RouteTableA07850BA"
    },
    "SubnetId": {
     "Ref": "VpcVPCpublicSubnet1SubnetA91B7DBE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet1/RouteTableAssociation"
   }
  },
  "VpcVPCpublicSubnet1DefaultRoute498D45E6": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcVPCIGWAC9DFBD8"
    },
    "RouteTableId": {
     "Ref": "VpcVPCpublicSubnet1RouteTableA07850BA"
    }
   },
   "DependsOn": [
    "VpcVPCVPCGWDD3D1AF6"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet1/DefaultRoute"
   }
  },
  "VpcVPCpublicSubnet1EIP15896A4D": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/publicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet1/EIP"
   }
  },
  "VpcVPCpublicSubnet1NATGatewayC3853FCB": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcVPCpublicSubnet1EIP15896A4D",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcVPCpublicSubnet1SubnetA91B7DBE"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/publicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcVPCpublicSubnet1DefaultRoute498D45E6",
    "VpcVPCpublicSubnet1RouteTableAssociation48205878"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet1/NATGateway"
   }
  },
  "VpcVPCpublicSubnet2SubnetC9D5B981": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet2/Subnet"
   }
  },
  "VpcVPCpublicSubnet2RouteTable50B9E3ED": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/publicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet2/RouteTable"
   }
  },
  "VpcVPCpublicSubnet2RouteTableAssociationA9980FE5": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcVPCpublicSubnet2RouteTable50B9E3ED"
    },
    "SubnetId": {
     "Ref": "VpcVPCpublicSubnet2SubnetC9D5B981"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet2/RouteTableAssociation"
   }
  },
  "VpcVPCpublicSubnet2DefaultRoute9995691F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcVPCIGWAC9DFBD8"
    },
    "RouteTableId": {
     "Ref": "VpcVPCpublicSubnet2RouteTable50B9E3ED"
    }
   },
   "DependsOn": [
    "VpcVPCVPCGWDD3D1AF6"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/publicSubnet2/DefaultRoute"
   }
  },
  "VpcVPCprivateSubnet1Subnet29B9FADC": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/privateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet1/Subnet"
   }
  },
  "VpcVPCprivateSubnet1RouteTableBD57150E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/privateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet1/RouteTable"
   }
  },
  "VpcVPCprivateSubnet1RouteTableAssociationECDD1646": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcVPCprivateSubnet1RouteTableBD57150E"
    },
    "SubnetId": {
     "Ref": "VpcVPCprivateSubnet1Subnet29B9FADC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet1/RouteTableAssociation"
   }
  },
  "VpcVPCprivateSubnet1DefaultRoute6B914B4C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcVPCpublicSubnet1NATGatewayC3853FCB"
    },
    "RouteTableId": {
     "Ref": "VpcVPCprivateSubnet1RouteTableBD57150E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet1/DefaultRoute"
   }
  },
  "VpcVPCprivateSubnet2Subnet63498DC1": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/privateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet2/Subnet"
   }
  },
  "VpcVPCprivateSubnet2RouteTable364CB60F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC/privateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet2/RouteTable"
   }
  },
  "VpcVPCprivateSubnet2RouteTableAssociationE88BBAEC": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcVPCprivateSubnet2RouteTable364CB60F"
    },
    "SubnetId": {
     "Ref": "VpcVPCprivateSubnet2Subnet63498DC1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet2/RouteTableAssociation"
   }
  },
  "VpcVPCprivateSubnet2DefaultRoute4FF71C2C": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcVPCpublicSubnet1NATGatewayC3853FCB"
    },
    "RouteTableId": {
     "Ref": "VpcVPCprivateSubnet2RouteTable364CB60F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/privateSubnet2/DefaultRoute"
   }
  },
  "VpcVPCIGWAC9DFBD8": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/IGW"
   }
  },
  "VpcVPCVPCGWDD3D1AF6": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcVPCIGWAC9DFBD8"
    },
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/VPCGW"
   }
  },
  "VpcVPCRestrictDefaultSecurityGroupCustomResourceF5ABD33B": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "VpcVPC8B8C4E4B",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "758164713735"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "VpcVPCS3GatewayEndpointBC0589FD": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "VpcVPCprivateSubnet1RouteTableBD57150E"
     },
     {
      "Ref": "VpcVPCprivateSubnet2RouteTable364CB60F"
     },
     {
      "Ref": "VpcVPCpublicSubnet1RouteTableA07850BA"
     },
     {
      "Ref": "VpcVPCpublicSubnet2RouteTable50B9E3ED"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC"
     }
    ],
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/S3GatewayEndpoint/Resource"
   }
  },
  "VpcVPCDynamoDBEndpointA0CFA24D": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "VpcVPCprivateSubnet1RouteTableBD57150E"
     },
     {
      "Ref": "VpcVPCprivateSubnet2RouteTable364CB60F"
     },
     {
      "Ref": "VpcVPCpublicSubnet1RouteTableA07850BA"
     },
     {
      "Ref": "VpcVPCpublicSubnet2RouteTable50B9E3ED"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".dynamodb"
      ]
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC"
     }
    ],
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/DynamoDBEndpoint/Resource"
   }
  },
  "VpcVPCBedrockEndpointSecurityGroup051D7BC3": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AssistantBackendStack/Vpc/VPC/BedrockEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "VpcVPC8B8C4E4B",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "VpcVPC8B8C4E4B",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/BedrockEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcVPCBedrockEndpointCC8A6EA2": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcVPCBedrockEndpointSecurityGroup051D7BC3",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-east-1.bedrock-runtime",
    "SubnetIds": [
     {
      "Ref": "VpcVPCprivateSubnet1Subnet29B9FADC"
     },
     {
      "Ref": "VpcVPCprivateSubnet2Subnet63498DC1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "AssistantBackendStack/Vpc/VPC"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Vpc/VPC/BedrockEndpoint/Resource"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:758164713735:security-group/",
             {
              "Fn::GetAtt": [
               "VpcVPC8B8C4E4B",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-758164713735-us-east-1",
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "ssmBedrockRegionParameter3898168F": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/bedrock_region",
    "Type": "String",
    "Value": "us-west-2"
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/ssmBedrockRegionParameter/Resource"
   }
  },
  "ssmLLMModelIDParameterA0CC5D29": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/llm_model_id",
    "Type": "String",
    "Value": "anthropic.claude-v2"
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/ssmLLMModelIDParameter/Resource"
   }
  },
  "AgentDBSubnetGroup1480BD4E": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for AgentDB database",
    "SubnetIds": [
     {
      "Ref": "VpcVPCprivateSubnet1Subnet29B9FADC"
     },
     {
      "Ref": "VpcVPCprivateSubnet2Subnet63498DC1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDB/SubnetGroup/Default"
   }
  },
  "AgentDBSecurityGroupB03CC0F7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for AgentDB database",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDB/SecurityGroup/Resource"
   }
  },
  "AgentDBSecurityGroupfromAssistantBackendStackProcessingSecurityGroup6D26CD125432BA86CBEA": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow inbound traffic from SageMaker to RDS",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "AgentDBSecurityGroupB03CC0F7",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ProcessingSecurityGroup5BDF13BE",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDB/SecurityGroup/from AssistantBackendStackProcessingSecurityGroup6D26CD12:5432"
   }
  },
  "AgentDBSecurityGroupfromAssistantBackendStackLambdaAgentContainerSecurityGroupAF60224D5432E1E0A743": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow Lambda to connect to RDS",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "AgentDBSecurityGroupB03CC0F7",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "LambdaAgentContainerSecurityGroup4509E773",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDB/SecurityGroup/from AssistantBackendStackLambdaAgentContainerSecurityGroupAF60224D:5432"
   }
  },
  "AssistantBackendStackAgentDBSecretD25161943fdaad7efa858a3daf9490cf0a702aeb": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"AgentDBAdmin\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDB/Secret/Resource"
   }
  },
  "AgentDBSecretAttachment8C6DB88D": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "AssistantBackendStackAgentDBSecretD25161943fdaad7efa858a3daf9490cf0a702aeb"
    },
    "TargetId": {
     "Ref": "AgentDBD4C116E7"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDB/Secret/Attachment/Resource"
   }
  },
  "AgentDBD4C116E7": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "20",
    "BackupRetentionPeriod": 1,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.micro",
    "DBName": "AgentSQLDBandVectorStore",
    "DBSubnetGroupName": {
     "Ref": "AgentDBSubnetGroup1480BD4E"
    },
    "DeleteAutomatedBackups": true,
    "Engine": "postgres",
    "EngineVersion": "15.8",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "AssistantBackendStackAgentDBSecretD25161943fdaad7efa858a3daf9490cf0a702aeb"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": "AgentDBAdmin",
    "PubliclyAccessible": false,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "AgentDBSecurityGroupB03CC0F7",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDB/Resource"
   }
  },
  "ProcessingSecurityGroup5BDF13BE": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AssistantBackendStack/ProcessingSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/ProcessingSecurityGroup/Resource"
   }
  },
  "ProcessingSecurityGroupfromAssistantBackendStackAgentDBSecurityGroup622615F0543226F017F0": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow outbound traffic to RDS from SageMaker jobs",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "ProcessingSecurityGroup5BDF13BE",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AgentDBSecurityGroupB03CC0F7",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/ProcessingSecurityGroup/from AssistantBackendStackAgentDBSecurityGroup622615F0:5432"
   }
  },
  "ProcessingSecurityGroupIdParameterC17E9A83": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/SMProcessingJobSecurityGroupId",
    "Type": "String",
    "Value": {
     "Fn::GetAtt": [
      "ProcessingSecurityGroup5BDF13BE",
      "GroupId"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/ProcessingSecurityGroupIdParameter/Resource"
   }
  },
  "DBSecretArnParameter9F1292D2": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/DBSecretARN",
    "Type": "String",
    "Value": {
     "Ref": "AgentDBSecretAttachment8C6DB88D"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/DBSecretArnParameter/Resource"
   }
  },
  "SubnetIdsParameter36D6DB6E": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/SubnetIds",
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "[\"",
       {
        "Ref": "VpcVPCpublicSubnet1SubnetA91B7DBE"
       },
       "\",\"",
       {
        "Ref": "VpcVPCpublicSubnet2SubnetC9D5B981"
       },
       "\"]"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/SubnetIdsParameter/Resource"
   }
  },
  "ChatHistoryTableA22BA13C": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "SessionId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "SessionId",
      "KeyType": "HASH"
     }
    ],
    "TableClass": "STANDARD_INFREQUENT_ACCESS"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/ChatHistoryTable/Resource"
   }
  },
  "LambdaAgentContainerServiceRoleC3F44F71": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "VpcVPCprivateSubnet1DefaultRoute6B914B4C",
    "VpcVPCprivateSubnet1RouteTableAssociationECDD1646",
    "VpcVPCprivateSubnet2DefaultRoute4FF71C2C",
    "VpcVPCprivateSubnet2RouteTableAssociationE88BBAEC"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/LambdaAgentContainer/ServiceRole/Resource"
   }
  },
  "LambdaAgentContainerServiceRoleDefaultPolicy5AE9F6AD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ssm:DescribeParameters",
        "ssm:GetParameter",
        "ssm:GetParameterHistory",
        "ssm:GetParameters"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "ssmBedrockRegionParameter3898168F"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "ssmLLMModelIDParameterA0CC5D29"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ChatHistoryTableA22BA13C",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "AgentDBSecretAttachment8C6DB88D"
       }
      },
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaAgentContainerServiceRoleDefaultPolicy5AE9F6AD",
    "Roles": [
     {
      "Ref": "LambdaAgentContainerServiceRoleC3F44F71"
     }
    ]
   },
   "DependsOn": [
    "VpcVPCprivateSubnet1DefaultRoute6B914B4C",
    "VpcVPCprivateSubnet1RouteTableAssociationECDD1646",
    "VpcVPCprivateSubnet2DefaultRoute4FF71C2C",
    "VpcVPCprivateSubnet2RouteTableAssociationE88BBAEC"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/LambdaAgentContainer/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaAgentContainerSecurityGroup4509E773": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function AssistantBackendStackLambdaAgentContainer76778261",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VpcVPC8B8C4E4B"
    }
   },
   "DependsOn": [
    "VpcVPCprivateSubnet1DefaultRoute6B914B4C",
    "VpcVPCprivateSubnet1RouteTableAssociationECDD1646",
    "VpcVPCprivateSubnet2DefaultRoute4FF71C2C",
    "VpcVPCprivateSubnet2RouteTableAssociationE88BBAEC"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/LambdaAgentContainer/SecurityGroup/Resource"
   }
  },
  "LambdaAgentContainer328438B0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "758164713735.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-758164713735-us-east-1:fe04b14605578261bfefa7b5a8b63d1011c97f9d200089945e06cec0c93d9b39"
     }
    },
    "Description": "Lambda function with bedrock access created via CDK",
    "Environment": {
     "Variables": {
      "BEDROCK_REGION_PARAMETER": {
       "Ref": "ssmBedrockRegionParameter3898168F"
      },
      "LLM_MODEL_ID_PARAMETER": {
       "Ref": "ssmLLMModelIDParameterA0CC5D29"
      },
      "CHAT_MESSAGE_HISTORY_TABLE": {
       "Ref": "ChatHistoryTableA22BA13C"
      },
      "AGENT_DB_SECRET_ID": {
       "Ref": "AgentDBSecretAttachment8C6DB88D"
      }
     }
    },
    "MemorySize": 512,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "LambdaAgentContainerServiceRoleC3F44F71",
      "Arn"
     ]
    },
    "Timeout": 180,
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "LambdaAgentContainerSecurityGroup4509E773",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      {
       "Ref": "VpcVPCprivateSubnet1Subnet29B9FADC"
      },
      {
       "Ref": "VpcVPCprivateSubnet2Subnet63498DC1"
      }
     ]
    }
   },
   "DependsOn": [
    "LambdaAgentContainerServiceRoleDefaultPolicy5AE9F6AD",
    "LambdaAgentContainerServiceRoleC3F44F71",
    "VpcVPCprivateSubnet1DefaultRoute6B914B4C",
    "VpcVPCprivateSubnet1RouteTableAssociationECDD1646",
    "VpcVPCprivateSubnet2DefaultRoute4FF71C2C",
    "VpcVPCprivateSubnet2RouteTableAssociationE88BBAEC"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/LambdaAgentContainer/Resource",
    "aws:asset:path": "asset.fe04b14605578261bfefa7b5a8b63d1011c97f9d200089945e06cec0c93d9b39",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:docker-build-args": {
     "--platform": "linux/amd64"
    },
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "AgentLambdaNameParameterC57B8D37": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/AgentExecutorLambdaNameParameter",
    "Type": "String",
    "Value": {
     "Ref": "LambdaAgentContainer328438B0"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentLambdaNameParameter/Resource"
   }
  },
  "AgentDataBucket67AFDFB9": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDataBucket/Resource"
   }
  },
  "AgentDataBucketPolicy3D961A43": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AgentDataBucket67AFDFB9"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AgentDataBucket67AFDFB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AgentDataBucket67AFDFB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDataBucket/Policy/Resource"
   }
  },
  "AgentDataBucketAutoDeleteObjectsCustomResourceD6E996DC": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AgentDataBucket67AFDFB9"
    }
   },
   "DependsOn": [
    "AgentDataBucketPolicy3D961A43"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDataBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-758164713735-us-east-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "AgentDataBucket67AFDFB9"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "AgentDataBucketParameter5D00B641": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/AgentDataBucketParameter",
    "Type": "String",
    "Value": {
     "Ref": "AgentDataBucket67AFDFB9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentDataBucketParameter/Resource"
   }
  },
  "sageMakerPostgresDBAccessIAMPolicy69BF39AD": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "Description": "",
    "Path": "/",
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ssm:GetParameter",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "AgentDataBucketParameter5D00B641"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "AgentLambdaNameParameterC57B8D37"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "DBSecretArnParameter9F1292D2"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "ProcessingSecurityGroupIdParameterC17E9A83"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "SubnetIdsParameter36D6DB6E"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "ssmBedrockRegionParameter3898168F"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:aws:ssm:us-east-1:758164713735:parameter",
           {
            "Ref": "ssmLLMModelIDParameterA0CC5D29"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": {
        "Ref": "AgentDBSecretAttachment8C6DB88D"
       }
      },
      {
       "Action": [
        "s3:DeleteObject",
        "s3:GetObject",
        "s3:ListBucket",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AgentDataBucket67AFDFB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AgentDataBucket67AFDFB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "LambdaAgentContainer328438B0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/sageMakerPostgresDBAccessIAMPolicy/Resource"
   }
  },
  "CognitoPool2F2E48AB": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_phone_number",
       "Priority": 1
      },
      {
       "Name": "verified_email",
       "Priority": 2
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AliasAttributes": [
     "email"
    ],
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Schema": [
     {
      "Mutable": false,
      "Name": "email",
      "Required": true
     }
    ],
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UsernameConfiguration": {
     "CaseSensitive": false
    },
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/CognitoPool/Resource"
   }
  },
  "CognitoPoolNextJsAppClient17034EED": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "code"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "openid"
    ],
    "CallbackURLs": [
     "https://localhost:3000/"
    ],
    "LogoutURLs": [
     "https://localhost:3000/"
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "CognitoPool2F2E48AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/CognitoPool/NextJsAppClient/Resource"
   }
  },
  "AssistantApi31301AC3": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "An API to invoke an LLM based agent which orchestrates using tools to answer user input questions.",
    "Name": "assistant-api"
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AssistantApi/Resource"
   }
  },
  "AssistantApiDeployment915E64390944af336d6fb760b41e0efb48f6a875": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "An API to invoke an LLM based agent which orchestrates using tools to answer user input questions.",
    "RestApiId": {
     "Ref": "AssistantApi31301AC3"
    }
   },
   "DependsOn": [
    "AssistantApiOPTIONSE2DADC28",
    "AssistantApiPOST86F761C9",
    "ChatAuthorizer3005753F"
   ],
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AssistantApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "AssistantApiDeploymentStageprodD980B56D": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "AssistantApiDeployment915E64390944af336d6fb760b41e0efb48f6a875"
    },
    "RestApiId": {
     "Ref": "AssistantApi31301AC3"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AssistantApi/DeploymentStage.prod/Resource"
   }
  },
  "AssistantApiOPTIONSE2DADC28": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AssistantApi31301AC3",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AssistantApi31301AC3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AssistantApi/Default/OPTIONS/Resource"
   }
  },
  "AssistantApiPOSTApiPermissionAssistantBackendStackAssistantApi1FDD658EPOSTE2B9508E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaAgentContainer328438B0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:758164713735:",
       {
        "Ref": "AssistantApi31301AC3"
       },
       "/",
       {
        "Ref": "AssistantApiDeploymentStageprodD980B56D"
       },
       "/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AssistantApi/Default/POST/ApiPermission.AssistantBackendStackAssistantApi1FDD658E.POST.."
   }
  },
  "AssistantApiPOSTApiPermissionTestAssistantBackendStackAssistantApi1FDD658EPOST2EA45AF7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaAgentContainer328438B0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:758164713735:",
       {
        "Ref": "AssistantApi31301AC3"
       },
       "/test-invoke-stage/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AssistantApi/Default/POST/ApiPermission.Test.AssistantBackendStackAssistantApi1FDD658E.POST.."
   }
  },
  "AssistantApiPOST86F761C9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "COGNITO_USER_POOLS",
    "AuthorizerId": {
     "Ref": "ChatAuthorizer3005753F"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'"
       },
       "StatusCode": "200"
      }
     ],
     "Type": "AWS",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LambdaAgentContainer328438B0",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "AssistantApi31301AC3",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "AssistantApi31301AC3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AssistantApi/Default/POST/Resource"
   }
  },
  "ChatAuthorizer3005753F": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "IdentitySource": "method.request.header.Authorization",
    "Name": "AssistantBackendStackChatAuthorizer4DCE3EAB",
    "ProviderARNs": [
     {
      "Fn::GetAtt": [
       "CognitoPool2F2E48AB",
       "Arn"
      ]
     }
    ],
    "RestApiId": {
     "Ref": "AssistantApi31301AC3"
    },
    "Type": "COGNITO_USER_POOLS"
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/ChatAuthorizer/Resource"
   }
  },
  "cognitoUserPoolParameterD1967D29": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/cognito_user_pool_id",
    "Type": "String",
    "Value": {
     "Ref": "CognitoPool2F2E48AB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/cognitoUserPoolParameter/Resource"
   }
  },
  "cognitoUserPoolClientParameter86E153A7": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/cognito_user_pool_client_id",
    "Type": "String",
    "Value": {
     "Ref": "CognitoPoolNextJsAppClient17034EED"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/cognitoUserPoolClientParameter/Resource"
   }
  },
  "AgentAPIURLParameterAF26C4F2": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/AgenticLLMAssistant/agent_api",
    "Type": "String",
    "Value": {
     "Fn::Join": [
      "",
      [
       "https://",
       {
        "Ref": "AssistantApi31301AC3"
       },
       ".execute-api.us-east-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Ref": "AssistantApiDeploymentStageprodD980B56D"
       },
       "/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/AgentAPIURLParameter/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31Ty27bMBD8ltxpNlEvvfqRBj6kFeQ012BFbWTGEilwlzZcgf9eiJQlpSh62tnhaB9DKpPZQybv7+BCK1WdVo0uZX9gUCcBF3rrUWWyf+2U2L6b13wrcl82Wh18aZAHbkaF9YwvUDY48zO3JrJKA2trJvEAHvf5EH4APwHjBa4id/oMjHPhvWF0BidBmmTM1sygji0aFiPz2qlHU3VWGx6lUxorvYPCpeaAyjvN1ydnfRdH/y+xN7VDoiCI2sEpp02dg4MWGd2gnpIgXEWy3wFDCYR7QwxGoUibTdV3myVxUx9QubT+bnP7MgiKLLVgoEYn+zTcIEzhBVyNvPBkEvx9EkR1NdDaqpT9dGkRBNFAW1Yg+51VJ3T7Fmr87o263d0S5+haTaStCUJDK/vCplIx5rbRKl7YiJ7j4NXMfyKCQOXegAiZ5KL5emCGM1lgZ0mzddcNEAr6KvuNV6dk1IhSmFss8yCUrY1mK/tfhC63thkkE76BbaNH9z4zQUCn6/TOZF8g8brTcd0R7rBr7PVm/SI7MNTpx4igQLLeKYxrPCMfbRXtGFEa8tab1p6P1unf6YHNWQhTIbH1xLad0zjTv45yZ8+6QhdbR2uHkbSph29+eu48B2FshfKDvpyzTD58k/d3H6T1ynnDukVZpPgHvtn6oTwEAAA="
   },
   "Metadata": {
    "aws:cdk:path": "AssistantBackendStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "AssistantApiEndpointF696CEB5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AssistantApi31301AC3"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AssistantApiDeploymentStageprodD980B56D"
      },
      "/"
     ]
    ]
   }
  },
  "sageMakerPostgresDBAccessIAMPolicyARN": {
   "Value": {
    "Ref": "sageMakerPostgresDBAccessIAMPolicy69BF39AD"
   }
  },
  "UserPoolClient": {
   "Value": {
    "Ref": "CognitoPoolNextJsAppClient17034EED"
   }
  },
  "UserPoolId": {
   "Value": {
    "Ref": "CognitoPool2F2E48AB"
   }
  },
  "UserPoolProviderURL": {
   "Value": {
    "Fn::GetAtt": [
     "CognitoPool2F2E48AB",
     "ProviderURL"
    ]
   }
  },
  "EndpointURL": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "AssistantApi31301AC3"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "AssistantApiDeploymentStageprodD980B56D"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}